// Importa a biblioteca dart:io para permitir leitura e escrita no console
import 'dart:io';

// Importa a classe Livros (modelo de dados)
import 'models/Livros.dart';

// Importa a classe ConsoleLivros (que cont√©m o CRUD)
import 'console.dart';

void main() {
  // Cria um objeto da classe ConsoleLivros, respons√°vel por gerenciar os livros
  var console = ConsoleLivros();

  // Vari√°vel booleana que controla se o programa continua rodando
  bool rodando = true;

  // Enquanto "rodando" for verdadeiro, o menu continuar√° aparecendo
  while (rodando) {
    // Exibe o menu principal
    print("\n=== MENU ===");
    print("1 - Listar livros");
    print("2 - Criar livro");
    print("3 - Atualizar livro");
    print("4 - Deletar livro");
    print("5 - Sair");

    // Pede para o usu√°rio escolher uma op√ß√£o
    stdout.write("Escolha uma op√ß√£o: ");
    String? opcao = stdin.readLineSync(); // L√™ a entrada do usu√°rio

    // Estrutura de decis√£o baseada na op√ß√£o escolhida
    switch (opcao) {
      case "1":
        // Chama o m√©todo que lista todos os livros
        console.listarLivros();
        break;

      case "2":
        // Coleta os dados para criar um novo livro
        stdout.write("Digite o id: ");
        int id = int.parse(stdin.readLineSync()!);

        stdout.write("Digite o t√≠tulo: ");
        String titulo = stdin.readLineSync()!;

        stdout.write("Digite o autor: ");
        String autor = stdin.readLineSync()!;

        stdout.write("Digite o n√∫mero de p√°ginas: ");
        int paginas = int.parse(stdin.readLineSync()!);

        stdout.write("Digite o ano de lan√ßamento: ");
        int ano = int.parse(stdin.readLineSync()!);

        // Cria e adiciona o livro na lista
        console.criarLivro(Livros(id, titulo, autor, paginas, DateTime(ano)));
        break;

      case "3":
        // Atualizar dados de um livro existente
        stdout.write("Digite o id do livro a atualizar: ");
        int id = int.parse(stdin.readLineSync()!);

        // Novo t√≠tulo
        stdout.write("Novo t√≠tulo (ou Enter para manter): ");
        String? novoTitulo = stdin.readLineSync();
        if (novoTitulo != null && novoTitulo.isEmpty) novoTitulo = null;

        // Novo autor
        stdout.write("Novo autor (ou Enter para manter): ");
        String? novoAutor = stdin.readLineSync();
        if (novoAutor != null && novoAutor.isEmpty) novoAutor = null;

        // Novas p√°ginas
        stdout.write("Novo n√∫mero de p√°ginas (ou Enter para manter): ");
        String? paginasStr = stdin.readLineSync();
        int? novasPaginas = paginasStr != null && paginasStr.isNotEmpty
            ? int.parse(paginasStr)
            : null;

        // Chama a atualiza√ß√£o no console
        console.atualizarLivro(
          id,
          titulo: novoTitulo,
          autor: novoAutor,
          paginas: novasPaginas,
        );
        break;

      case "4":
        // Deletar livro pelo id
        stdout.write("Digite o id do livro a deletar: ");
        int id = int.parse(stdin.readLineSync()!);
        console.deletarLivro(id);
        break;

      case "5":
        // Sai do programa
        print("üëã Encerrando o programa...");
        rodando = false;
        break;

      default:
        // Caso o usu√°rio digite algo inv√°lido
        print("‚ö†Ô∏è Op√ß√£o inv√°lida, tente novamente.");
    }
  }
}
